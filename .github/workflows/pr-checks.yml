# .github/workflows/pr-checks.yml
name: Pull Request Checks

on:
  pull_request:
    branches: [ master, main, dev, develop ]
    types: [opened, synchronize, reopened]
permissions:
  contents: read
  checks: write

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            chore
          requireScope: false

      - name: Check for merge conflicts
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Fetch the target branch
          git fetch origin ${{ github.base_ref }}

          # Check if merge is possible without conflicts
          if ! git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q "<<<<<<< "; then
            echo "✅ No merge conflicts detected"
          else
            echo "❌ Merge conflicts detected. Please resolve conflicts before merging."
            exit 1
          fi

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: pr-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Validate Maven wrapper
        run: |
          if [ -f "./mvnw" ]; then
            chmod +x ./mvnw
          fi

      - name: Clean and compile
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw clean compile -B -V
          else
            mvn clean compile -B -V
          fi

      - name: Run Checkstyle
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw checkstyle:check -B
          else
            mvn checkstyle:check -B
          fi

      - name: Run SpotBugs
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw spotbugs:check -B
          else
            mvn spotbugs:check -B
          fi
        continue-on-error: true

      - name: Run PMD
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw pmd:check -B
          else
            mvn pmd:check -B
          fi
        continue-on-error: true

      - name: Run unit tests
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw test -B
          else
            mvn test -B
          fi

      - name: Run integration tests
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw verify -B -DskipUTs=true
          else
            mvn verify -B -DskipUTs=true
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            target/surefire-reports/
            target/failsafe-reports/
            target/checkstyle-result.xml
            target/spotbugsXml.xml
            target/pmd.xml

      - name: Comment PR with test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: 'target/surefire-reports/*.xml,target/failsafe-reports/*.xml'
          reporter: java-junit

  branch-protection:
    name: Branch Protection Check
    runs-on: ubuntu-latest
    needs: [pr-validation, build-and-test]
    if: always()

    steps:
      - name: Check required status
        run: |
          if [ "${{ needs.pr-validation.result }}" = "success" ] && [ "${{ needs.build-and-test.result }}" = "success" ]; then
            echo "✅ All checks passed - PR can be merged"
            exit 0
          else
            echo "❌ Some checks failed:"
            echo "PR Validation: ${{ needs.pr-validation.result }}"
            echo "Build and Test: ${{ needs.build-and-test.result }}"
            exit 1
          fi
